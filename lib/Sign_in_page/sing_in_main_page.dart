import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:flutter_statusbarcolor_ns/flutter_statusbarcolor_ns.dart';import 'package:get/get.dart';import 'package:get_storage/get_storage.dart';import 'package:google_fonts/google_fonts.dart';import 'package:hoomy_project1/home/home_main_page.dart';import '../Sign_up_page/Sign_up_main_page.dart';import '../Sign_up_page/text_Field.dart';import '../Sign_up_page/white_logo.dart';import '../api/Api_calls.dart';import '../api/api_models.dart';import '../api/auth_service/auth.dart';import '../api/local_database/shared_preferences.dart';import '../home/catigory_buttons.dart';import '../landing/button.dart';class Sign_in_main_page extends StatefulWidget {  Sign_in_main_page({Key? key}) : super(key: key);  @override  State<Sign_in_main_page> createState() => _Sign_in_main_pageState();}class _Sign_in_main_pageState extends State<Sign_in_main_page> {  final TextEditingController email = TextEditingController();  final TextEditingController password = TextEditingController();  static final RxString typed_email = ''.obs;  static final RxString typed_password = ''.obs;  bool swich = true;  @override  Widget build(BuildContext context) {    RxBool delay = true.obs;    FlutterStatusbarcolor.setStatusBarColor(Color(0xff45B9EE), animate: true);    return Scaffold(        backgroundColor: Colors.white,        body: SafeArea(            child: SingleChildScrollView(          child: Center(              child: Column(                  mainAxisAlignment: MainAxisAlignment.start,                  crossAxisAlignment: CrossAxisAlignment.center,                  children: [                Image.asset(                  "photo/33.png",                  width: double.infinity,                ),                Padding(                  padding: const EdgeInsets.only(top: 10, bottom: 20),                  child: Text(                    "أهلا بك",                    style: GoogleFonts.inter(fontSize: 28),                  ),                ),                Obx(() {                  return Text_Field1(                    MyController: email,                    onChanged: (text) {                      typed_email.value = text;                      print(text);                    },                    hintText: 'الايميل'.obs,                    icon: Icon((Icons.alternate_email),                        color: typed_email.value.isEmpty                            ? Colors.black38                            : Color(0xff45B9EE)),                    labelText: ''.obs,                    pass: false,                  );                }),                Obx(() {                  return Text_Field1(                    MyController: password,                    onChanged: (text) {                      typed_password.value = text;                      print(text);                    },                    hintText: 'الباسورد'.obs,                    icon: IconButton(                      icon: Icon(swich == true                          ? Icons.visibility_off                          : Icons.visibility),                      color: typed_password.value.isEmpty                          ? Colors.black38                          : Color(0xff45B9EE),                      onPressed: () {                        setState(() {                          if (swich == false) {                            swich = true;                          } else {                            swich = false;                          }                        });                        print(swich);                      },                    ),                    labelText: ''.obs,                    pass: swich,                  );                }),                Obx(                   () {                    return Padding(                        padding: const EdgeInsets.symmetric(                          vertical: 5,                        ),                        child: delay.value == false ? CircularProgressIndicator():Button1(                          text: 'تسجيل الدخول',                          onPressed: () async {                            print("");                            password_check();                            if (password_check() == true) {                              print("delay1 ${delay.value}");                              BackEnd.Prodects3 = [];                              await Database2.initStorage();                              await BackEnd.Get3();                              await BackEnd.get_Categories();                              delay.value = false;                              print("delay2 ${delay.value}");                              await Future.delayed(const Duration(seconds: 5), () {                                AuthService.signIn(                                    email: email.text, password: password.text);                              });                              delay.value = true;                              print("delay3 ${delay.value}");                            }                          },                        )                    );                  }                ),                CatigoryButtons(                  text: 'لا تمتلك حساب؟ انقر لأنشاء حساب',                  onPressed: () {                    Get.to(Sign_up_main_page(),                        transition: Transition.noTransition,                        duration: Duration(seconds: 1));                  },                ),              ])),        )));  }  password_check() {    bool flags = false;    if (password.text.length < 8) {      return ScaffoldMessenger.of(context).showSnackBar(const SnackBar(          duration: Duration(seconds: 2),          backgroundColor: Colors.red,          content: Text(            'الباسورد اقل من 8 احرف',            textDirection: TextDirection.rtl,            style: TextStyle(fontSize: 18, color: Colors.black),          )));    } else if (password.text.contains(RegExp(r'[#?!@$%^&*-]'))) {      return ScaffoldMessenger.of(context).showSnackBar(const SnackBar(          duration: Duration(seconds: 2),          backgroundColor: Colors.red,          content: Text('الباسورد يجب ان لا يحتوي على حروف خاصة ',              textDirection: TextDirection.rtl,              style: TextStyle(fontSize: 18))));    } else {      flags = true;      return flags;    }  }}