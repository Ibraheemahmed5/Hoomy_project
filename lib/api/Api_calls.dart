import 'dart:convert';import 'dart:io';import 'package:dio/dio.dart';import 'package:get/get_state_manager/src/simple/get_controllers.dart';import 'package:hoomy_project1/api/local_database/shared_preferences.dart';import 'package:http/http.dart' as http;import 'api_Url.dart';import 'api_models.dart';import 'cart_models.dart';void main() {  //ApiCall.Get_Prodect();//print(ApiCall.Get_Prodects());//BackEnd.Get3();//BackEnd.get_Categories();  //BackEnd.Get_cart();}class BackEnd extends GetxController{  static bool? isFav = false;  static bool? add = false;  static bool? is_clicked = false;  static bool? delete_from_cart = true;  static Dio getall = Dio();  static Dio getcart = Dio();  static List Prodects3 = <ProductModel>[].toSet().toList();  static Get3() async {    final res = await getall.get(ApiConstants.get_All_Products);    if (res.statusCode == 200 || res.statusCode == 201) {      print(Prodects3.length);      Prodects3 = <ProductModel>[].toSet().toList();      res.data.forEach((e) {        Prodects3.add(ProductModel.fromJson(e));      });    }    print(Prodects3.length);    print("Get3");  }  static List apiCategory = [].toSet().toList();  static get_Categories() async {    final res = await getall.get(ApiConstants.get_All_Categories);    apiCategory = [].toSet().toList();    res.data.forEach((e) {      apiCategory.add(Category.fromJson(e));    });    print("get_Categories");  }  static List apiBanners = [].toSet().toList();  static get_Banners() async {    final res = await getall.get(ApiConstants.get_All_Banners);    apiBanners.addAll(res.data);    print(apiBanners[0]);  }  static List categoryList = [];  static  Get_Category_List(String text) async{    categoryList = BackEnd.Prodects3.where((e) => e.category.title == text).toList();  }  static List favList = [].toSet().toList();  static  Get_Fav_List() async{    favList = BackEnd.Prodects3.where((e) => e.isFav == true).toList();    print("//////////////favvv////////////////");    print(favList.length);  }  static List relatidList = [];  static  Get_Related_List(String text) async{    relatidList = [].toSet().toList();    relatidList = BackEnd.Prodects3.where((e) => e.category.title == text).toList();  }  makeAsFav() {    if (isFav == false)      isFav = true;    else      isFav = false;  }  deleteFromCart() {    if (delete_from_cart == false)      delete_from_cart = true;    else      delete_from_cart = false;  }  makeAsClicked() {    if (is_clicked == false)      is_clicked = true;    else      is_clicked = false;  }  addToCart() {    if (add == false)      add = true;    else      add = false;  }  static List Prodects_cart = <Cart_modles>[].toSet().toList();  static String token = Database2.box.read("token");  static Get_cart() async {     //token = Database2.box.read("token");    print("////////////فووك الايرور//////////////////");    try {      final res = await http.get(        Uri.parse(ApiConstants.get_Cart),        // Send authorization headers to the backend.        headers: {          HttpHeaders.authorizationHeader:              'Bearer $token',        },      );      print("/////////////جوه الايرور/////////////////");      final responseJson = json.decode(res.body);      responseJson.forEach((e) {        Prodects_cart.add(Cart_modles.fromJson(e));      });      print(res.statusCode);      if (res.statusCode == 200 || res.statusCode == 201) {        print("//////////////////////////////");         print(Prodects_cart[0].product.title);      }    } catch (e) {      print("error");      print(e);    }    print("//////////////carttt////////////////");    print(Prodects_cart.length);  }  static add_to_card({required int id}) async {    print("//////////////هنا فوك////////////////");    print(Prodects_cart.length);    var headers = {      'Authorization': 'Bearer $token',      'Content-Type': 'text/plain'    };    print("//////////////هنا بالنص////////////////");    print(Prodects_cart.length);    var request = http.Request('POST', Uri.parse(ApiConstants.add_to_Cart));    request.body = '''{\r\n  "product_id":${id},\r\n  "quantity": 1\r\n}''';    request.headers.addAll(headers);    http.StreamedResponse response = await request.send();    print("//////////////هنا جوة////////////////");    print(Prodects_cart.length);    if (response.statusCode == 200) {      print(await response.stream.bytesToString());      print("//////////////sssssssssss////////////////");      print(Prodects_cart.length);    }    else {    print(response.reasonPhrase);    }  }  static delete_from_card(int id) async{    var headers = {      'Authorization': 'Bearer $token',      'Content-Type': 'text/plain'    };    var request = http.Request('DELETE', Uri.parse('https://zaynhamza.pythonanywhere.com/api/cart/item/${id}'));    request.body = '''{\r\n  "detail": "string"\r\n}''';    request.headers.addAll(headers);    http.StreamedResponse response = await request.send();    if (response.statusCode == 200) {      print(await response.stream.bytesToString());    }    else {      print(response.reasonPhrase);    }  }  static create() async {    var headers = {      'Authorization': 'Bearer $token'    };    var request = http.Request('POST', Uri.parse(ApiConstants.create));    request.body = '''''';    request.headers.addAll(headers);    http.StreamedResponse response = await request.send();    if (response.statusCode == 200) {      print(await response.stream.bytesToString());    }    else {    print(response.reasonPhrase);    }  }  static checkout() async {    var headers = {      'Authorization': 'Bearer $token'    };    var request = http.Request('POST', Uri.parse(ApiConstants.checkout));    request.body = '''''';    request.headers.addAll(headers);    http.StreamedResponse response = await request.send();    if (response.statusCode == 200) {      print(await response.stream.bytesToString());    }    else {    print(response.reasonPhrase);    }  }}